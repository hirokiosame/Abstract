{"version":3,"sources":["../src/sqlBuilder.js"],"names":[],"mappings":";;;;;qBAAe;;AAEd,YAAW,EAAC,qBAAC,MAAM,EAAE;;AAEpB,MAAI,UAAU,GAAG,EAAE,CAAC;;;AAIpB,OAAK,IAAI,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE;AACxC,OAAI,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;AAExC,OAAI,IAAI,YAAY,QAAQ,EAAE;;AAE7B,cAAU,CAAC,IAAI,OAAM,SAAS,WAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,IAAI,EAAE,CAAA,CAAG,CAAC;;AAEnF,cAAU,CAAC,IAAI,oBAAmB,SAAS,sBAAkB,IAAI,CAAC,SAAS,WAAO,IAAI,CAAC,UAAU,4CAA0C,CAAC;IAC5I,MAEI,IAAI,IAAI,YAAY,MAAM,EAAE;AAChC,cAAU,CAAC,IAAI,OAAM,SAAS,WAAM,IAAI,CAAC,IAAI,IAAI,EAAE,CAAA,UAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAA,CAAG,CAAC;IAC1E;GAED;;;AAGD,MAAI,OAAO,MAAM,CAAC,UAAU,KAAK,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AAClF,aAAU,CAAC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;GAC7D;;;AAGD,MAAI,MAAM,CAAC,UAAU,YAAY,KAAK,EAAE;AACvC,aAAU,CAAC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;GACzE;;AAGD,MAAI,KAAK,oCAAmC,MAAM,CAAC,SAAS,mBACzD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,kDACe,CAAC;;AAEzC,SAAO,KAAK,CAAC;EACb;;AAED,YAAW,EAAC,qBAAC,KAAK,EAAE,QAAQ,EAAE;;AAE7B,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;;AAEpC,MAAI,gBAAgB,GAAG,EAAE;MACxB,MAAM,GAAG,EAAE,CAAC;;AAEb,OAAK,IAAI,GAAG,IAAI,UAAU,EAAE;;AAE3B,OAAI,CAAE,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,AAAC,EAAE;AAAE,aAAS;IAAE;;AAElD,OAAI,UAAU,CAAC,GAAG,CAAC,YAAY,QAAQ,EAAE;;AAExC,QAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,UAAU,CAAC,GAAG,CAAC,EAAE;;AAE7C,qBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,WAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;KACvD;AACD,aAAS;IACT;;AAED,mBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;GAC3B;;AAED,SAAO,mBACW,KAAK,CAAC,SAAS,kBAC7B,gBAAgB,kBAAa,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,4CACjC,gBAAgB,CAAC,GAAG,CAAC,UAAC,CAAC;UAAQ,CAAC,gBAAW,CAAC;GAAG,CAAC,gBAE7E,MAAM,CACN,CAAC;EACF;;AAED,YAAW,EAAC,qBAAC,MAAM,EAAE,KAAK,EAAE,EAE3B;CACD","file":"sqlBuilder.js","sourcesContent":["export default {\n\n\tcreateTable (schema) {\n\n\t\tlet attributes = [];\n\n\n\t\t// Attributes\n\t\tfor( let attribute in schema.attributes ){\n\t\t\tlet opts = schema.attributes[attribute];\n\n\t\t\tif( opts instanceof Function ){\n\n\t\t\t\tattributes.push(`\\`${attribute}\\` ${opts.attributes[opts.primaryKey].type || \"\"}`);\t\n\n\t\t\t\tattributes.push(`FOREIGN KEY (\\`${attribute}\\`) REFERENCES ${opts.tableName} (\\`${opts.primaryKey}\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\t\n\t\t\t}\n\n\t\t\telse if( opts instanceof Object ){\n\t\t\t\tattributes.push(`\\`${attribute}\\` ${opts.type || \"\"} ${opts.misc || \"\"}`);\t\n\t\t\t}\n\n\t\t}\n\n\t\t// Primary Key\n\t\tif( typeof schema.primaryKey === \"string\" && schema.attributes[schema.primaryKey] ){\n\t\t\tattributes.push(\"PRIMARY KEY (`\" + schema.primaryKey + \"`)\");\n\t\t}\n\n\t\t// Unique keys\n\t\tif( schema.uniqueKeys instanceof Array ){\n\t\t\tattributes.push(\"UNIQUE KEY (`\" + schema.uniqueKeys.join(\"`, `\") + \"`)\");\n\t\t}\n\n\n\t\tlet query = `CREATE TABLE IF NOT EXISTS \\`${schema.tableName}\\` (\n\t\t\t${attributes.join(\",\\n\")}\n\t\t) ENGINE=InnoDB DEFAULT CHARSET=latin1;`;\n\n\t\treturn query;\n\t},\n\n\tinsertModel (model, instance) {\n\n\t\tconst attributes = model.attributes;\n\n\t\tlet insertAttributes = [],\n\t\t\tvalues = [];\n\n\t\tfor (let att in attributes) {\n\n\t\t\tif (!(instance.hasOwnProperty(att))) { continue; }\n\n\t\t\tif (attributes[att] instanceof Function) {\n\n\t\t\t\tif (instance[att] instanceof attributes[att]) {\n\t\t\t\t\t// Insert PK\n\t\t\t\t\tinsertAttributes.push(att);\n\t\t\t\t\tvalues.push(instance[att][attributes[att].primaryKey]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tinsertAttributes.push(att);\n\t\t\tvalues.push(instance[att]);\n\t\t}\n\n\t\treturn [\n\t\t\t`INSERT INTO \\`${model.tableName}\\`\n\t\t\t(${insertAttributes}) VALUES (${Array(values.length).fill('?')})\n\t\t\t-- ON DUPLICATE KEY UPDATE ${insertAttributes.map((k) => `${k}=values(${k})`)};\n\t\t\t`,\n\t\t\tvalues\n\t\t];\n\t},\n\n\tupdateModel (schema, model) {\n\n\t}\n};"]}