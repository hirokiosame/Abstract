{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":";;;;;;;;sBAA2B,QAAQ;;AAEnC,IAAI,EAAE,GAAG,CAAC,YAAW;AACpB,KAAI,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;;AAEnC,QAAO,SAAS,EAAE,CAAC,MAAM,EAAE;;AAE1B,MAAI,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;AAErC,MAAI,CAAC,GAAG,EAAE;;AAET,MAAG,GAAG,0BAAkB,CAAC;AACzB,MAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;AAEvB,iBAAc,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;GAChC;;AAED,SAAO,GAAG,CAAC;EACX,CAAC;CACF,CAAA,EAAG,CAAC;QACG,EAAE,GAAF,EAAE;;AAIH,SAAS,UAAU,CAAC,KAAK,EAAO,MAAM,EAAa;KAA/B,KAAK,gBAAL,KAAK,GAAG,EAAE;KAAU,EAAE,yDAAG,KAAK;;AACxD,KAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAAE,SAAO,EAAE,CAAC;EAAE;;AAEhE,QAAO,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,UAAA,CAAC;SAAK,AAAE,CAAC,YAAY,KAAK,GAAK,UAAU,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;EAAC,CAAE,CAC7F,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC;CACrC;;AAAA,CAAC;;;;AAKK,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG,EAAC;;AAEzC,KAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;AAEnC,KAAI,CAAC,OAAO,EAAE;AAAE,SAAO,SAAS,CAAC;EAAE;;;AAGnC,MAAK,IAAI,GAAG,IAAI,KAAK,CAAC,UAAU,EAAE;;AAEjC,MAAI,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;;AAGrC,MAAI,QAAQ,YAAY,QAAQ,EAAE;AACjC,UAAO,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;GAC7C;EACD;;AAED,QAAO,OAAO,CAAC;CACf;;AAAA,CAAC","file":"utils.js","sourcesContent":["import {EventEmitter} from 'events';\n\nlet EE = (function() {\n\tlet eventListeners = new WeakMap();\n\n\treturn function EE(object) {\n\n\t\tlet _EE = eventListeners.get(object);\n\n\t\tif (!_EE) {\n\n\t\t\t_EE = new EventEmitter();\n\t\t\t_EE.setMaxListeners(0);\n\n\t\t\teventListeners.set(object, _EE);\n\t\t}\n\n\t\treturn _EE;\n\t};\n})();\nexport {EE};\n\n\n\nexport function buildWhere(where = [], filter, or = false){\n\tif( where instanceof Array && where.length === 0 ){ return \"\"; }\n\n\treturn \"(\" + where.map( w => (( w instanceof Array ) ? buildWhere(w, filter, !or) : filter(w)) )\n\t\t\t.join(or ? \" OR \" : \" AND \") + \")\";\n};\n\n\n\n// Helper\nexport function structureModel(model, row){\n\n\tlet modeled = row[model.tableName];\n\n\tif( !modeled ){ return undefined; }\n\n\t// Look for foreign key references\n\tfor( let att in model.attributes ){\n\n\t\tlet relModel = model.attributes[att];\n\n\t\t// Check if schema-attribute is relational\n\t\tif( relModel instanceof Function ){\n\t\t\tmodeled[att] = structureModel(relModel, row);\n\t\t}\n\t}\n\t\n\treturn modeled;\n};"]}