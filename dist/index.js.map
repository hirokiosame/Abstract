{"version":3,"sources":["../src/constructorMethods.js","../src/index.js","../src/instanceMethods.js","../src/sqlBuilder.js","../src/utils.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {EE, buildWhere, structureModel} from './utils';\nimport signature from 'signature.js';\nimport * as sql from './sqlBuilder';\n\n\n// States\nconst SQL_QUERYING = Symbol('Querying');\nconst SQL_COMPLETED = Symbol('Completed');\n\n\n\nexport default class ModelConstructorMethods {\n\n\tconstructor(){\n\n\t}\n\n\n\t\n\tstatic createTable (cb) {\n\n\t\tconst model = this;\n\n\t\t/* Validation */\n\t\tconsole.assert(typeof this.tableName === 'string', this.name + '.tableName: Must be a string');\n\t\tconsole.assert(this.tableName.length > 0, 'tableName: Cannot be an empty string');\n\n\t\tconsole.assert(typeof this.attributes === 'object', this.name + '.attributes: Must be an object');\n\t\tconsole.assert(Object.keys(this.attributes).length > 0, this.name + '.attributes: Must have at least one attribute');\n\n\n\t\tif (model.tableCreated === SQL_QUERYING) {\n\t\t\ttypeof cb === 'function' && EE(model).once('tableCreated', cb);\n\t\t\treturn;\n\t\t}\n\n\t\tif (model.tableCreated === SQL_COMPLETED) {\n\t\t\ttypeof cb === 'function' && cb(null, false);\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.tableCreated = SQL_QUERYING;\n\n\t\tthis._connection.query(sql.createTable(model), (err) => {\n\n\t\t\tmodel.tableCreated = SQL_COMPLETED;\n\n\t\t\tif (typeof cb === 'function') { cb(err, true); }\n\n\t\t\tEE(model).emit('tableCreated', err, true);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\n\n\n\n\tstatic find(){\n\n\t\tlet { where, replacements, cb } = signature(\n\t\t\t[['function', 'cb']],\n\t\t\t[[Array, 'where']],\n\t\t\t[[Array, 'where'], ['function', 'cb']],\n\t\t\t[[Array, 'where'], [Array, 'replacements'], ['function', 'cb']]\n\t\t)(arguments);\n\n\t\tconsole.log(where);\n\t\tconsole.log(replacements);\n\n\n\n\t\tconst model = this;\n\n\t\tlet innerJoins = [];\n\n\t\tlet _where = [];\n\n\t\tif (where ) {\n\t\t\tfor (let clause of where) {\n\n\t\t\t\tif (typeof clause === 'string') {\n\t\t\t\t\t_where.push(model.tableName + '.' + clause);\n\t\t\t\t}\n\n\t\t\t\tif (clause instanceof Object) {\n\n\t\t\t\t\tlet fModel = clause.model,\n\t\t\t\t\t\tfKey = model::findFK(fModel);\n\n\n\t\t\t\t\tinnerJoins.push(`\n\t\t\t\t\t\tINNER JOIN ${fModel.tableName} ON\n\t\t\t\t\t\t${fModel.tableName}.${fModel.primaryKey} = ${model.tableName}.${fKey}\n\t\t\t\t\t`, ...clause.innerJoins);\n\n\t\t\t\t\t_where.push(...clause.where);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!cb) {\n\t\t\treturn {\n\t\t\t\tmodel,\n\t\t\t\twhere: _where,\n\t\t\t\tinnerJoins\n\t\t\t};\n\t\t}\n\n\n\n\n\t\tlet query = `SELECT * FROM \\`${model.tableName}\\` `;\n\n\n\t\tif (innerJoins.length > 0) {\n\t\t\tquery += innerJoins.join(' ');\n\t\t}\n\t\tif (_where.length > 0) {\n\t\t\tquery += 'WHERE ' + buildWhere(_where, (a)=> a );\n\t\t}\n\n\t\tconsole.log(query, replacements);\n\t\tthis._connection.query({\n\t\t\tsql: query,\n\t\t\tnestTables: true\n\t\t}, replacements, (err, rows, fields) => {\n\n\t\t\tif (err) { return cb(err); }\n\n\t\t\tconsole.log('Raw find result', err, rows);\n\n\t\t\tcb(null, rows.map( row => new model(structureModel(model, row)) ));\n\t\t});\n\t}\n\n}","import mysql from 'mysql';\nimport InstanceMethods from './instanceMethods';\n\n\nexport default class Abstract extends InstanceMethods {\n\n\tconstructor(properties){\n\t\tsuper();\n\n\t\tif (!(properties instanceof Object)) { return; }\n\n\t\tconst\tmodel = this.constructor,\n\t\t\t\tschema = model.attributes;\n\n\t\t// Iterate schema attributes\n\t\tfor (let att in schema) {\n\n\t\t\t// Validation of attribute\n\t\t\tif (!properties.hasOwnProperty(att)) { continue; }\n\n\t\t\tlet attribute = schema[att];\n\n\t\t\t// If foreign reference\n\t\t\tif (attribute instanceof Function) {\n\n\t\t\t\t// Validate reference\n\t\t\t\tif (!(\n\t\t\t\t\tproperties[att] instanceof Object &&\n\t\t\t\t\tproperties[att].hasOwnProperty(attribute.primaryKey)\n\t\t\t\t)){ continue; }\n\n\t\t\t\t// Create the instance\n\t\t\t\tif( !(properties[att] instanceof attribute) ){\n\t\t\t\t\tproperties[att] = new attribute(properties[att]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add\n\t\t\tthis::setAttribute(att, properties[att]);\n\t\t}\n\n\t\tconsole.log(JSON.stringify(this));\n\t}\n\n\n\tstatic connect(config){\n\n\t\tthis._connection = mysql.createConnection(config);\n\t\tthis._connection.connect();\n\t}\n};\n\n\nfunction setAttribute (attrName, value) {\n\n\tlet attrSymbol = Symbol(attrName);\n\n\tthis[attrSymbol] = value;\n\n\tObject.defineProperty(this, attrName, {\n\t\tget: function() {\n\t\t\treturn this[attrSymbol];\n\t\t},\n\t\tset: function( val ) {\n\t\t\tthis.unsyncd = true;\n\t\t\treturn this[attrSymbol] = val;\n\t\t}\n\t});\n}\n\n","import asynk from 'asynk';\nimport * as sql from './sqlBuilder';\nimport ConstructorMethods from './constructorMethods';\n\nexport default class InstanceMethods extends ConstructorMethods {\n\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\ttoJSON () {\n\t\tconst\tmodel = this.constructor,\n\t\t\t\tattributes = model.attributes;\n\n\t\tlet obj = {};\n\n\t\tfor (let att in attributes) {\n\t\t\tobj[att] = this[att];\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\n\tbelongsTo (...objs) {\n\n\t\t// console.log('belongsTo');\n\n\t\tconst model = this.constructor;\n\n\t\tfor (let obj of objs) {\n\n\t\t\tif (!(obj instanceof Model)) { continue; }\n\n\t\t\tlet instanceParent = obj.constructor;\n\n\t\t\t// Verify has primary key\n\t\t\tif (!obj.hasOwnProperty(instanceParent.primaryKey)) {\n\t\t\t\tthrow new Error('Cannot establish relation without a primary key');\n\t\t\t}\n\n\t\t\t// Verify that the relation exists in schema\n\t\t\tlet exists = false;\n\t\t\tfor (let att in model.attributes) {\n\t\t\t\tif (model.attributes[att] === instanceParent) {\n\t\t\t\t\texists = att; break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (exists === false) { throw new Error('The relationship does not exist'); }\n\n\n\t\t\t// let opts = {};\n\t\t\t// opts[instanceParent.primaryKey] = obj[instanceParent.primaryKey];\n\n\t\t\tthis[exists] = obj;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\n\tfindByAttributes (keys, cb) {\n\n\t\tconst\tmodel = this.constructor,\n\t\t\t\tattributes = model.attributes;\n\n\n\t\tlet where = [],\n\t\t\tvalues = [];\n\n\t\tfor (let att of keys) {\n\n\t\t\tconsole.assert(att in attributes, `Attribute '${att}' not defined in schema`);\n\n\t\t\tlet value = this[att];\n\n\t\t\twhere.push(`\\`${att}\\` = ?`);\n\n\t\t\t// if( value instanceof Object ){\n\t\t\t// \tlet _model = value.constructor;\n\t\t\t// \tvalues.push(value[_model.primaryKey]);\n\t\t\t// }else{\n\t\t\t\tvalues.push(value);\n\t\t\t// }\n\t\t}\n\n\t\tmodel.find(where, values, cb);\n\t}\n\n\n\tfindSelf (cb) {\n\n\t\tconst model = this.constructor;\n\n\t\t// Find by primary key\n\t\tif (this[model.primaryKey]) {\n\n\t\t\t// IMPLEMENT\n\t\t\t// Fetch Data\n\t\t\tthis.findByAttributes([model.primaryKey], (err, models) => {\n\n\t\t\t\tconsole.assert(!err, 'There was an error ' + err);\n\n\t\t\t\tconsole.log('found', models);\n\t\t\t\tif (models instanceof Array && models.length > 0) {\n\n\t\t\t\t\tfor (let att in models[0]) {\n\n\t\t\t\t\t\t// If attribues don't exist\n\t\t\t\t\t\tif( !this.hasOwnProperty(att) ){\n\t\t\t\t\t\t\tthis[att] = models[0][att];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcb(this);\n\n\n\t\t\t\t\t// Only extend key properties\n\t\t\t\t\t// cb( this::extendProperties(model, models[0]) );\n\t\t\t\t}else{\n\t\t\t\t\tcb(false);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Find by unique keys\n\t\tif (\n\t\t\tmodel.uniqueKeys instanceof Array &&\n\t\t\tmodel.uniqueKeys.every((att) => this[att] !== undefined )\n\t\t) {\n\n\t\t\t// Fetch Data\n\t\t\tthis.findByAttributes(model.uniqueKeys, (err, models) => {\n\n\t\t\t\tif (models instanceof Array && models.length > 0) {\n\n\t\t\t\t\tfor (let att in models[0]) {\n\n\t\t\t\t\t\t// If attribues don't exist\n\t\t\t\t\t\tif (!this.hasOwnProperty(att)) {\n\t\t\t\t\t\t\tthis[att] = models[0][att];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcb(this);\n\n\n\t\t\t\t\t// Only extend key properties\n\t\t\t\t\t// cb( this::extendProperties(model, models[0]) );\n\t\t\t\t}else{\n\t\t\t\t\tcb(false);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tcb(false);\n\t}\n\n\t// Insert or update\n\tsave (cb) {\n\t\treturn this::asynk(function* (resume) {\n\n\t\t\tconst model = this.constructor;\n\n\t\t\tconsole.log('Save', this);\n\n\t\t\t// Validation\n\t\t\tfor( let att in model.attributes ){\n\t\t\t\tif (model.attributes[att].required) {\n\t\t\t\t\tconsole.assert(!this[att], 'Missing required field ' + att + ' in ' + JSON.stringify(this));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet err, result;\n\n\n\t\t\tlet tableCreated;\n\t\t\t[err, tableCreated] = yield model.createTable(resume);\n\t\t\tconsole.assert(err === null, err);\n\n\n\t\t\t// If table already existed, find self\n\t\t\tif (!tableCreated) {\n\n\t\t\t\tlet [found] = yield this.findSelf(resume);\n\n\t\t\t\tconsole.log('found?', found);\n\n\t\t\t\tif (found) { return this.update(cb); }\n\t\t\t}\n\n\n\t\t\t// Save instance\n\t\t\tlet query = sql.insertModel(model, this);\n\t\t\tconsole.log(query);\n\t\t\t[err, result] = yield model._connection.query(...query, resume);\n\t\t\tconsole.log(err, result);\n\n\t\t\tif (err) {\n\n\t\t\t\tif (err.code === 'ER_DUP_ENTRY') {\n\t\t\t\t\treturn this.findSelf( () => this.update(cb) );\n\t\t\t\t}\n\n\t\t\t\ttypeof cb === 'function' && cb(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.assert(result.affectedRows === 1, 'Failed to insert new row');\n\n\t\t\t// Assign primary key - not reliable, always numeric\n\t\t\t// if (model.primaryKey && result instanceof Object && result.insertId !== null) {\n\t\t\t// \tthis[model.primaryKey] = result.insertId;\n\t\t\t// }\n\n\t\t\ttypeof cb === 'function' && cb(null, this);\n\t\t});\n\t}\n\n\n\tupdate (cb) {\n\n\n\t\tconsole.log('update!')\n\n\t\tconst model = this.constructor;\n\n\t\t// EDIT LATER\n\t\tif (!this[model.primaryKey]) { throw new Error('Please add a primary key in ' + JSON.stringify(this)); }\n\n\n\t\tlet set = [],\n\t\t\tvalues = [];\n\n\t\tfor (let att in this) {\n\t\t\t// if( att === model.primaryKey ){ continue; }\n\n\t\t\tlet value = this[att];\n\n\t\t\tset.push(`\\`${att}\\` = ?`);\n\n\t\t\tif (value instanceof Object) {\n\t\t\t\tlet _model = value.constructor;\n\t\t\t\tvalues.push(value[_model.primaryKey]);\n\t\t\t}else{\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t}\n\t\tvalues.push(this[model.primaryKey]);\n\n\n\t\tif (set.length === 0) {\n\t\t\treturn cb(null, this);\n\t\t}\n\n\t\tthis::asynk(function* (resume) {\n\n\t\t\tlet query = `UPDATE ${model.tableName} SET ${set} WHERE ${model.primaryKey} = ?;`;\n\n\t\t\tconsole.log(query, values);\n\n\t\t\tlet [err, rows, fields] = yield model._connection.query(query, values, resume);\n\n\t\t\tif (err) { return cb(err); }\n\n\t\t\tif (rows.affectedRows !== 1) {\n\t\t\t\tthrow new Error(`${rows.affectedRows} rows affected! ${query}`);\n\t\t\t}\n\n\t\t\tcb(null, this);\n\t\t});\n\t}\n}","export default {\n\n\tcreateTable (schema) {\n\n\t\tlet attributes = [];\n\n\n\t\t// Attributes\n\t\tfor( let attribute in schema.attributes ){\n\t\t\tlet opts = schema.attributes[attribute];\n\n\t\t\tif( opts instanceof Function ){\n\n\t\t\t\tattributes.push(`\\`${attribute}\\` ${opts.attributes[opts.primaryKey].type || \"\"}`);\t\n\n\t\t\t\tattributes.push(`FOREIGN KEY (\\`${attribute}\\`) REFERENCES ${opts.tableName} (\\`${opts.primaryKey}\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\t\n\t\t\t}\n\n\t\t\telse if( opts instanceof Object ){\n\t\t\t\tattributes.push(`\\`${attribute}\\` ${opts.type || \"\"} ${opts.misc || \"\"}`);\t\n\t\t\t}\n\n\t\t}\n\n\t\t// Primary Key\n\t\tif( typeof schema.primaryKey === \"string\" && schema.attributes[schema.primaryKey] ){\n\t\t\tattributes.push(\"PRIMARY KEY (`\" + schema.primaryKey + \"`)\");\n\t\t}\n\n\t\t// Unique keys\n\t\tif( schema.uniqueKeys instanceof Array ){\n\t\t\tattributes.push(\"UNIQUE KEY (`\" + schema.uniqueKeys.join(\"`, `\") + \"`)\");\n\t\t}\n\n\n\t\tlet query = `CREATE TABLE IF NOT EXISTS \\`${schema.tableName}\\` (\n\t\t\t${attributes.join(\",\\n\")}\n\t\t) ENGINE=InnoDB DEFAULT CHARSET=latin1;`;\n\n\t\treturn query;\n\t},\n\n\tinsertModel (model, instance) {\n\n\t\tconst attributes = model.attributes;\n\n\t\tlet insertAttributes = [],\n\t\t\tvalues = [];\n\n\t\tfor (let att in attributes) {\n\n\t\t\tif (!(instance.hasOwnProperty(att))) { continue; }\n\n\t\t\tif (attributes[att] instanceof Function) {\n\n\t\t\t\tif (instance[att] instanceof attributes[att]) {\n\t\t\t\t\t// Insert PK\n\t\t\t\t\tinsertAttributes.push(att);\n\t\t\t\t\tvalues.push(instance[att][attributes[att].primaryKey]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tinsertAttributes.push(att);\n\t\t\tvalues.push(instance[att]);\n\t\t}\n\n\t\treturn [\n\t\t\t`INSERT INTO \\`${model.tableName}\\`\n\t\t\t(${insertAttributes}) VALUES (${Array(values.length).fill('?')})\n\t\t\t-- ON DUPLICATE KEY UPDATE ${insertAttributes.map((k) => `${k}=values(${k})`)};\n\t\t\t`,\n\t\t\tvalues\n\t\t];\n\t},\n\n\tupdateModel (schema, model) {\n\n\t}\n};","import {EventEmitter} from 'events';\n\nlet EE = (function() {\n\tlet eventListeners = new WeakMap();\n\n\treturn function EE(object) {\n\n\t\tlet _EE = eventListeners.get(object);\n\n\t\tif (!_EE) {\n\n\t\t\t_EE = new EventEmitter();\n\t\t\t_EE.setMaxListeners(0);\n\n\t\t\teventListeners.set(object, _EE);\n\t\t}\n\n\t\treturn _EE;\n\t};\n})();\nexport {EE};\n\n\n\nexport function buildWhere(where = [], filter, or = false){\n\tif( where instanceof Array && where.length === 0 ){ return \"\"; }\n\n\treturn \"(\" + where.map( w => (( w instanceof Array ) ? buildWhere(w, filter, !or) : filter(w)) )\n\t\t\t.join(or ? \" OR \" : \" AND \") + \")\";\n};\n\n\n\n// Helper\nexport function structureModel(model, row){\n\n\tlet modeled = row[model.tableName];\n\n\tif( !modeled ){ return undefined; }\n\n\t// Look for foreign key references\n\tfor( let att in model.attributes ){\n\n\t\tlet relModel = model.attributes[att];\n\n\t\t// Check if schema-attribute is relational\n\t\tif( relModel instanceof Function ){\n\t\t\tmodeled[att] = structureModel(relModel, row);\n\t\t}\n\t}\n\t\n\treturn modeled;\n};"]}