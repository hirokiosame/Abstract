{"version":3,"sources":["../src/Abstract.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAAkB,OAAO;;;;uCACG,4BAA4B;;;;IAGlD,CAAC,YAAD,CAAC;uBAAD,CAAC;;MACN,CAAC,GAAG,EAAE;;;IAKc,QAAQ;WAAR,QAAQ;;AAIjB,UAJS,QAAQ,CAIhB,UAAU,EAAC;wBAJH,QAAQ;;AAK3B,6BALmB,QAAQ,6CAKnB;;OAHT,OAAO,GAAG,EAAE;AAKX,MAAI,EAAE,UAAU,YAAY,MAAM,CAAA,AAAC,EAAE;AAAE,UAAO;GAAE;;AAEhD,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW;MAC5B,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;;;AAGhC,OAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;;;AAGhC,UAAO,CAAC,MAAM,CACb,UAAU,CAAC,QAAQ,CAAC,YAAY,MAAM,IAAI,UAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ,SAC9E,QAAQ,8BACZ,CAAC;;;;AAIF,OAAI,UAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ,EAAE;AAC7C,WAAO,CAAC,MAAM,CAAC,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,KAAK,QAAQ,EAAE,0CAA0C,CAAC,CAAC;;AAEhH,QAAI,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;;AAEjD,WAAO,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,kCAAkC,CAAC,CAAC;IAC/G;;AAGD,AAAM,eAAY,MAAlB,IAAI,EAAe,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEnD,OAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACzB,QAAI,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;IACtC;GACD;;AAGD,OAAK,CAAC,WAAW,CAAC,UAAC,GAAG,EAAK;AAAE,OAAI,GAAG,EAAE;AAAE,UAAM,GAAG,CAAC;IAAE;GAAE,CAAC,CAAC;EACxD;;cAzCmB,QAAQ;;SA4Cd,iBAAC,MAAM,EAAC;;AAErB,OAAI,CAAC,WAAW,GAAG,mBAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAClD,OAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;GAC3B;;;QAhDmB,QAAQ;;;qBAAR,QAAQ;AAiD5B,CAAC;;AAGF,SAAS,YAAY,CAAE,QAAQ,EAAE,UAAU,EAAE;;AAE5C,KAAI,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAElC,OAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;AACrC,KAAG,EAAE,eAAW;AACf,UAAO,IAAI,CAAC,UAAU,CAAC,CAAC;GACxB;AACD,KAAG,EAAE,aAAS,GAAG,EAAE;;AAElB,OAAI,UAAU,YAAY,QAAQ,EAAE;AACnC,WAAO,CAAC,MAAM,CAAC,GAAG,YAAY,UAAU,EAAE,4CAA4C,CAAC,CAAC;AACxF,WAAO,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,mCAAmC,CAAC,CAAC;IAC/F;;AAED,OAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;;;AAGvB,OAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAAE,QAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAAE;;AAE5D,UAAO,GAAG,CAAC;GACX;EACD,CAAC,CAAC;CACH","file":"Abstract.js","sourcesContent":["import mysql from 'mysql';\nimport InstanceMethods from './Abstract.instanceMethods';\n\n\nclass A {\n\tb = [];\n}\n\n\n\nexport default class Abstract extends InstanceMethods {\n\n\tunsyncd = {};\n\n\tconstructor(properties){\n\t\tsuper();\n\n\t\tif (!(properties instanceof Object)) { return; }\n\n\t\tconst\tmodel = this.constructor,\n\t\t\t\tattributes = model.attributes;\n\n\t\t// Iterate schema attributes\n\t\tfor (let attrName in attributes) {\n\n\t\t\t// Validate the schema\n\t\t\tconsole.assert(\n\t\t\t\tattributes[attrName] instanceof Object || attributes[attrName] instanceof Function,\n\t\t\t\t`'${attrName}' has an invalid schema`\n\t\t\t);\n\n\t\t\t// If reference, make sure it has a primary key\n\t\t\t// TODO: Allow reference ket to be set (Model.referenceBy('phoneNumber'))\n\t\t\tif (attributes[attrName] instanceof Function) {\n\t\t\t\tconsole.assert(typeof attributes[attrName].primaryKey === 'string', 'Reference schema must have a primary key');\n\n\t\t\t\tlet primaryKey = attributes[attrName].primaryKey;\n\n\t\t\t\tconsole.assert(attributes[attrName].attributes.hasOwnProperty(primaryKey), 'Reference primary key must exist');\n\t\t\t}\n\n\n\t\t\tthis::setAttribute(attrName, attributes[attrName]);\n\n\t\t\tif (properties[attrName]) {\n\t\t\t\tthis[attrName] = properties[attrName];\n\t\t\t}\n\t\t}\n\n\n\t\tmodel.createTable((err) => { if (err) { throw err; } });\n\t}\n\n\n\tstatic connect(config){\n\n\t\tthis._connection = mysql.createConnection(config);\n\t\tthis._connection.connect();\n\t}\n};\n\n\nfunction setAttribute (attrName, attrSchema) {\n\n\tlet attrSymbol = Symbol(attrName);\n\n\tObject.defineProperty(this, attrName, {\n\t\tget: function() {\n\t\t\treturn this[attrSymbol];\n\t\t},\n\t\tset: function(val) {\n\n\t\t\tif (attrSchema instanceof Function) {\n\t\t\t\tconsole.assert(val instanceof attrSchema, 'Value must be an instance of the reference');\n\t\t\t\tconsole.assert(val.hasOwnProperty(attrSchema.primaryKey), 'Reference must hold a primary key');\n\t\t\t}\n\n\t\t\tthis[attrSymbol] = val;\n\n\t\t\t// Mark as unsyncd\n\t\t\tif( !this.unsyncd[attrName] ){ this.unsyncd[attrName] = 1; }\n\n\t\t\treturn val;\n\t\t}\n\t});\n}\n\n"]}